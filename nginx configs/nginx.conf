user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

    server {
        server_name halfriver.me;

        # Point to your React build output
        root /home/django/halfriver.me/dist;
        index index.html;

        # Optional: silence favicon noise
        location = /favicon.ico { access_log off; log_not_found off; }

        # App routes: serve files if they exist, otherwise fall back to index.html
        location / {
            try_files $uri /index.html;
        }

        # Cache immutable build assets aggressively
        location ~* \.(?:js|css|png|jpg|jpeg|gif|svg|ico|webp|woff2?|ttf|eot)$ {
            try_files $uri =404;
            access_log off;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000, immutable";
        }

        # TLS — keep your existing certbot bits
        listen 443 ssl;
        ssl_certificate /etc/letsencrypt/live/halfriver.me/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/halfriver.me/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    }
    server {
        server_name quinnkwolter.com;
        location = /favicon.ico { access_log off; log_not_found off; }
        location /static {
                alias /home/django/QuinnKWolterSite/static;

            }
        location / {
            #include proxy_params;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarder-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://unix:/run/quinnkwolter.sock;
        }

        listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/halfriver.me/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/halfriver.me/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    }

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*.*;


	# server {
    # if ($host = halfriver.me) {
    #     return 301 https://$host$request_uri;
    # } # managed by Certbot

    # listen 80;
    # server_name halfriver.me www.halfriver.me;
    # return 404; # managed by Certbot
    # }

    # Redirect www → apex (HTTP)
    server {
        listen 80;
        server_name www.halfriver.me;
        return 301 https://halfriver.me$request_uri;
    }

    # Existing HTTP→HTTPS for apex (keep it)
    server {
        listen 80;
        server_name halfriver.me;
        return 301 https://halfriver.me$request_uri;
    }

    server {
        if ($host = quinnkwolter.com) {
            return 301 https://$host$request_uri;
        } # managed by Certbot

        listen 80;
        server_name quinnkwolter.com;
        return 404; # managed by Certbot
    }
}

